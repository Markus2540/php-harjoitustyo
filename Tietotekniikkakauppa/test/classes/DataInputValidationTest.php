<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-04-10 at 13:52:38.
 */

USE PHPunit\Framework\TestCase;

require 'classes/DataInputValidation.php';

class DataInputValidationTest extends TestCase {

    /**
     * @var DataInputValidation
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new DataInputValidation;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    /**
     * Generated from @assert ("abcDEF123!\"#¤%&/()=?") === false.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password() {
        $this->assertSame(
                false,
                $this->object->validate_password("abcDEF123!\"#¤%&/()=?")
        );
    }

    /**
     * Generated from @assert ("Salasana12!") === false.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password2() {
        $this->assertSame(
                false,
                $this->object->validate_password("Salasana12!")
        );
    }

    /**
     * Generated from @assert ("Salasana12;") === true.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password3() {
        $this->assertSame(
                true,
                $this->object->validate_password("Salasana12;")
        );
    }

    /**
     * Generated from @assert ("!\"#¤%&/()=?") === false.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password4() {
        $this->assertSame(
                false,
                $this->object->validate_password("!\"#¤%&/()=?")
        );
    }

    /**
     * Generated from @assert ("@£\$€{[]}\\") === true.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password5() {
        $this->assertSame(
                true,
                $this->object->validate_password("@£\$€{[]}\\")
        );
    }

    /**
     * Generated from @assert ("Salasana12\\") === true.
     *
     * @covers DataInputValidation::validate_password
     */
    public function testValidate_password6() {
        $this->assertSame(
                true,
                $this->object->validate_password("Salasana12\\")
        );
    }

    /**
     * Generated from @assert (";") === 0.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength() {
        $this->assertSame(
                0,
                $this->object->password_strength(";")
        );
    }

    /**
     * Generated from @assert ("a") === 1.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength2() {
        $this->assertSame(
                1,
                $this->object->password_strength("a")
        );
    }

    /**
     * Generated from @assert ("aA") === 2.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength3() {
        $this->assertSame(
                2,
                $this->object->password_strength("aA")
        );
    }

    /**
     * Generated from @assert ("Salasana12") === 3.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength4() {
        $this->assertSame(
                3,
                $this->object->password_strength("Salasana12")
        );
    }

    /**
     * Generated from @assert ("Salasana12!") === 4.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength5() {
        $this->assertSame(
                4,
                $this->object->password_strength("Salasana12!")
        );
    }

    /**
     * Generated from @assert ("Salasana12!;") === 4.
     *
     * @covers DataInputValidation::password_strength
     */
    public function testPassword_strength6() {
        $this->assertSame(
                4,
                $this->object->password_strength("Salasana12!;")
        );
    }

    /**
     * Generated from @assert ("John_Doe_42") === false.
     *
     * @covers DataInputValidation::validate_username
     */
    public function testValidate_username() {
        $this->assertSame(
                false,
                $this->object->validate_username("John_Doe_42")
        );
    }

    /**
     * Generated from @assert ("John.Doe") === true.
     *
     * @covers DataInputValidation::validate_username
     */
    public function testValidate_username2() {
        $this->assertSame(
                true,
                $this->object->validate_username("John.Doe")
        );
    }

    /**
     * Generated from @assert ("Mäkinen") === false.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name() {
        $this->assertSame(
                false,
                $this->object->validate_name("Mäkinen")
        );
    }

    /**
     * Generated from @assert ("O'Neill") === false.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name2() {
        $this->assertSame(
                false,
                $this->object->validate_name("O'Neill")
        );
    }

    /**
     * Generated from @assert ("Marja-Leena") === false.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name3() {
        $this->assertSame(
                false,
                $this->object->validate_name("Marja-Leena")
        );
    }

    /**
     * Generated from @assert ("Jaakko Ilmari") === false.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name4() {
        $this->assertSame(
                false,
                $this->object->validate_name("Jaakko Ilmari")
        );
    }

    /**
     * Generated from @assert ("John42") === true.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name5() {
        $this->assertSame(
                true,
                $this->object->validate_name("John42")
        );
    }

    /**
     * Generated from @assert ("Günther") === true.
     *
     * @covers DataInputValidation::validate_name
     */
    public function testValidate_name6() {
        $this->assertSame(
                true,
                $this->object->validate_name("Günther")
        );
    }

    /**
     * Generated from @assert ("Kotikatu 7A23") === false.
     *
     * @covers DataInputValidation::validate_address
     */
    public function testValidate_address() {
        $this->assertSame(
                false,
                $this->object->validate_address("Kotikatu 7A23")
        );
    }

    /**
     * Generated from @assert ("Järvikatu") === false.
     *
     * @covers DataInputValidation::validate_address
     */
    public function testValidate_address2() {
        $this->assertSame(
                false,
                $this->object->validate_address("Järvikatu")
        );
    }

    /**
     * Generated from @assert ("Katu 7-9") === false.
     *
     * @covers DataInputValidation::validate_address
     */
    public function testValidate_address3() {
        $this->assertSame(
                false,
                $this->object->validate_address("Katu 7-9")
        );
    }

    /**
     * Generated from @assert ("Kotikatu 7@23") === true.
     *
     * @covers DataInputValidation::validate_address
     */
    public function testValidate_address4() {
        $this->assertSame(
                true,
                $this->object->validate_address("Kotikatu 7@23")
        );
    }

    /**
     * Generated from @assert ("Suur-Miehikkälä") === false.
     *
     * @covers DataInputValidation::validate_post_office
     */
    public function testValidate_post_office() {
        $this->assertSame(
                false,
                $this->object->validate_post_office("Suur-Miehikkälä")
        );
    }

    /**
     * Generated from @assert ("Lehtimäki kk") === false.
     *
     * @covers DataInputValidation::validate_post_office
     */
    public function testValidate_post_office2() {
        $this->assertSame(
                false,
                $this->object->validate_post_office("Lehtimäki kk")
        );
    }

    /**
     * Generated from @assert ("5") === true.
     *
     * @covers DataInputValidation::validate_post_office
     */
    public function testValidate_post_office3() {
        $this->assertSame(
                true,
                $this->object->validate_post_office("5")
        );
    }

    /**
     * Generated from @assert (42) === false.
     *
     * @covers DataInputValidation::just_numbers
     */
    public function testJust_numbers() {
        $this->assertSame(
                false,
                $this->object->just_numbers(42)
        );
    }

    /**
     * Generated from @assert ("42") === false.
     *
     * @covers DataInputValidation::just_numbers
     */
    public function testJust_numbers2() {
        $this->assertSame(
                false,
                $this->object->just_numbers("42")
        );
    }

    /**
     * Generated from @assert ("00100") === false.
     *
     * @covers DataInputValidation::just_numbers
     */
    public function testJust_numbers3() {
        $this->assertSame(
                false,
                $this->object->just_numbers("00100")
        );
    }

    /**
     * Generated from @assert ("number42") === true.
     *
     * @covers DataInputValidation::just_numbers
     */
    public function testJust_numbers4() {
        $this->assertSame(
                true,
                $this->object->just_numbers("number42")
        );
    }

    /**
     * Generated from @assert ("1970-01-01T00:00") === false.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local() {
        $this->assertSame(
                false,
                $this->object->validate_datetime_local("1970-01-01T00:00")
        );
    }

    /**
     * Generated from @assert ("2024-02-29T23:59") === false.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local2() {
        $this->assertSame(
                false,
                $this->object->validate_datetime_local("2024-02-29T23:59")
        );
    }

    /**
     * Generated from @assert ("2022-04-04T18:03") === false.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local3() {
        $this->assertSame(
                false,
                $this->object->validate_datetime_local("2022-04-04T18:03")
        );
    }

    /**
     * Generated from @assert ("2022-13-04T12:12") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local4() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-13-04T12:12")
        );
    }

    /**
     * Generated from @assert ("2022-04-32T12:12") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local5() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-04-32T12:12")
        );
    }

    /**
     * Generated from @assert ("2022-04-04T24:12") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local6() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-04-04T24:12")
        );
    }

    /**
     * Generated from @assert ("2022-04-04T23:60") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local7() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-04-04T23:60")
        );
    }

    /**
     * Generated from @assert ("2022-04-04t12:12") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local8() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-04-04t12:12")
        );
    }

    /**
     * Generated from @assert ("2022-04-04T12:-12") === true.
     *
     * @covers DataInputValidation::validate_datetime_local
     */
    public function testValidate_datetime_local9() {
        $this->assertSame(
                true,
                $this->object->validate_datetime_local("2022-04-04T12:-12")
        );
    }

    /**
     * Generated from @assert ("15") === false.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money() {
        $this->assertSame(
                false,
                $this->object->validate_money("15")
        );
    }

    /**
     * Generated from @assert ("15.5") === false.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money2() {
        $this->assertSame(
                false,
                $this->object->validate_money("15.5")
        );
    }

    /**
     * Generated from @assert ("15.50") === false.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money3() {
        $this->assertSame(
                false,
                $this->object->validate_money("15.50")
        );
    }

    /**
     * Generated from @assert ("15,50") === true.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money4() {
        $this->assertSame(
                true,
                $this->object->validate_money("15,50")
        );
    }

    /**
     * Generated from @assert ("test") === true.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money5() {
        $this->assertSame(
                true,
                $this->object->validate_money("test")
        );
    }

    /**
     * Generated from @assert ("15.5.5") === true.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money6() {
        $this->assertSame(
                true,
                $this->object->validate_money("15.5.5")
        );
    }

    /**
     * Generated from @assert ("15.555") === true.
     *
     * @covers DataInputValidation::validate_money
     */
    public function testValidate_money7() {
        $this->assertSame(
                true,
                $this->object->validate_money("15.555")
        );
    }

    /**
     * Generated from @assert ("Just text") === false.
     *
     * @covers DataInputValidation::just_text
     */
    public function testJust_text() {
        $this->assertSame(
                false,
                $this->object->just_text("Just text")
        );
    }

    /**
     * Generated from @assert ("Text and 2") === true.
     *
     * @covers DataInputValidation::just_text
     */
    public function testJust_text2() {
        $this->assertSame(
                true,
                $this->object->just_text("Text and 2")
        );
    }

    /**
     * Generated from @assert ("Product 3,5 @ 5-6") === false.
     *
     * @covers DataInputValidation::product_name
     */
    public function testProduct_name() {
        $this->assertSame(
                false,
                $this->object->product_name("Product 3,5 @ 5-6")
        );
    }

    /**
     * Generated from @assert ("Product=7") === true.
     *
     * @covers DataInputValidation::product_name
     */
    public function testProduct_name2() {
        $this->assertSame(
                true,
                $this->object->product_name("Product=7")
        );
    }

    /**
     * Generated from @assert ("Puhelimet ja tarvikkeet") === false.
     *
     * @covers DataInputValidation::validate_category
     */
    public function testValidate_category() {
        $this->assertSame(
                false,
                $this->object->validate_category("Puhelimet ja tarvikkeet")
        );
    }

    /**
     * Generated from @assert ("Puhelimet_ja_tarvikkeet") === true.
     *
     * @covers DataInputValidation::validate_category
     */
    public function testValidate_category2() {
        $this->assertSame(
                true,
                $this->object->validate_category("Puhelimet_ja_tarvikkeet")
        );
    }

    /**
     * Generated from @assert ("Kuvaus, ®-") === false.
     *
     * @covers DataInputValidation::validate_description
     */
    public function testValidate_description() {
        $this->assertSame(
                false,
                $this->object->validate_description("Kuvaus, ®-")
        );
    }

    /**
     * Generated from @assert ("Kuvaus %") === true.
     *
     * @covers DataInputValidation::validate_description
     */
    public function testValidate_description2() {
        $this->assertSame(
                true,
                $this->object->validate_description("Kuvaus %")
        );
    }

    /**
     * Generated from @assert ("kuva1.jpg,kuva2.jpg") === false.
     *
     * @covers DataInputValidation::validate_picture_string
     */
    public function testValidate_picture_string() {
        $this->assertSame(
                false,
                $this->object->validate_picture_string("kuva1.jpg,kuva2.jpg")
        );
    }

    /**
     * Generated from @assert ("kuva?.jpg,kuva2.jpg") === true.
     *
     * @covers DataInputValidation::validate_picture_string
     */
    public function testValidate_picture_string2() {
        $this->assertSame(
                true,
                $this->object->validate_picture_string("kuva?.jpg,kuva2.jpg")
        );
    }

}
